# This file is part of the Juju GUI, which lets users view and manage Juju
# environments within a graphical interface (https://launchpad.net/juju-gui).
# Copyright (C) 2012-2014 Canonical Ltd.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License version 3, as published by
# the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranties of MERCHANTABILITY,
# SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

options:
  juju-gui-debug:
    description: |
      Run Juju GUI in debug mode, serving the uncompressed GUI source files.
    type: boolean
    default: false
  juju-gui-console-enabled:
    description: |
      Whether or not the console should be enabled for the browser.
    type: boolean
    default: false
  port:
    description: |
      Supply a different port to host the GUI on besides the default 80 and
      443. If the provided port is not a valid TCP port (ranging from 1 to
      65535) the defaults are used.
    type: int
    default:
  command-log-file:
    description: |
      The log file where stdout and stderr should be sent for all commands
      that are run by charm hooks.
    type: string
    default: /var/log/juju/juju-gui.log
  ssl-cert-path:
    description: |
      The path to the directory where the SSL certificates are stored.
    type: string
    default: /etc/ssl/juju-gui
  ssl-cert-contents:
    description: |
      The contents of the certificate file to be used in SSL connections to
      the GUI. Both ssl-cert-contents and ssl-key-contents must be provided.
      If not, cetificates will be automatically generated.
    type: string
    default:
  ssl-key-contents:
    description: |
      The contents of the private key file to be used in SSL connections to
      the GUI. Both ssl-cert-contents and ssl-key-contents must be provided.
      If not, cetificates will be automatically generated.
    type: string
    default:
  login-help:
    description: |
      The help text shown to the user on the login screen. If not provided, a
      default message is used, suggesting how to find the login credentials.
    type: string
    default:
  read-only:
    description: |
      Whether or not the GUI is in read-only mode. Note that read-only mode is
      advisory, and enforced only in the client. If someone can access the
      websocket and has the password, they can send commands over the
      websocket to mutate the environment.
    type: boolean
    default: false
  serve-tests:
    description: |
      Whether or not the GUI unit tests are exposed. If this option is
      enabled, unit tests can be run in the browser by visiting the URL
      "https://[Juju GUI address]/test/".
    type: boolean
    default: false
  secure:
    description: |
      Set to false to serve the GUI over an insecure HTTP connection.
      Do not set unless you understand and accept the risks.
    type: boolean
    default: true
  ws-secure:
    description: |
      Force the client to use secure ("wss") or unsecure ("ws") WebSockets.
      If left unset, secure WebSockets are used based on the secure option: if
      secure is True the "wss" protocol is used, othewise the "ws" one is used.
    type: boolean
    default: null
  password:
    description: |
      If given, the password to use for the environment to immediately
      connect.  Do not set unless you understand and accept the risks.
    type: string
    default:
  sandbox:
    description: |
      Run using an in-memory sandbox rather than a real Juju backend. Sandbox
      is a client side construct running entirely in the client. Sandbox does
      not currently support imported environment simulation.
    type: boolean
    default: false
  charmworld-url:
    description: |
      The URL of the charm catalog site ("charmworld") from which charm
      catalog data will be drawn.
    type: string
    default: https://manage.jujucharms.com/
  charmstore-url:
    description: |
      The URL of the charm store API service. This option supersedes the
      charmworld-url option above.
    type: string
    default: https://api.jujucharms.com/charmstore/
  charmstore-version:
    description: |
      The version of the charmstore API to use.
    type: string
    default: v4
  repository-location:
    description: |
      The charm depends on several software packages that are not packaged in
      Ubuntu.  In order to ensure that only versions known to work with our
      charm are used, there is a single PPA where all packages are kept.  The
      juju-gui-charmers team supports 'stable' and 'devel' versions.  Only
      stable should be used for production.  For enterprise deployments that
      do not allow access to resources outside of their control, the location
      can be any specification as long as it is recognizable by
      'add-apt-repository'.
    type: string
    default: ppa:juju-gui-charmers/stable
  hide-login-button:
    description: |
      There are deployment modes for Juju GUI which are not intended as regular
      use mode. In these cases, login/logout are disabled and instead there is
      a link to jujucharms.com.
    type: boolean
    default: false
  builtin-server-logging:
    description: |
      Set the GUI server log level. Possible values are debug, info, warning
      and error. The log file is placed in /var/log/upstart/guiserver.log.
    type: string
    default: info
  nagios_context:
    description: |
      Used by the nrpe-external-master subordinate charm.
      A string that will be prepended to instance name to set the host name
      in nagios. So for instance the hostname would be something like:
          juju-myservice-0
      If you are running multiple environments with the same services in them
      this allows you to differentiate between them.
    type: string
    default: "juju"
  cached-fonts:
    description: |
      Configure the GUI to use locally cached fonts, rather than the Google CDN
      as supplied by the Google fonts API.  The CDN is faster in almost every
      circumstance except local (LXC) environments, and so it is the default;
      but if a browser is running the GUI on a closed network, using cached
      fonts will let the GUI load much faster and render properly.
    type: boolean
    default: false
  juju-core-version:
    description: |
      The version of Juju tools used for the charm deployment. If left empty,
      the Juju version is dynamically retrieved.
    type: string
    default:
  jem-location:
    type: string
    default: ''
    description: Publicly accessible URL of a Juju Environment Manager.
  jem-version:
    type: string
    default: v1
    description: The version of the Juju Environment Manager API to use.
  interactive-login:
    description: |
      Enables interactive login to an identity-manager, if applicable.
    type: boolean
    default: true
  gzip-compression:
    description: |
      Enables gzip compressed responses from the gui.
    type: boolean
    default: true
  gtm-enabled:
    description: |
      Enables Google tag manager tracking.
    type: boolean
    default: false
